// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: channelconfig/v1/service.proto

package channelconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Feature int32

const (
	Feature_FEATURE_UNSPECIFIED   Feature = 0
	Feature_FEATURE_DAILY_SCRUM   Feature = 1
	Feature_FEATURE_WEEKLY_REPORT Feature = 2
)

// Enum value maps for Feature.
var (
	Feature_name = map[int32]string{
		0: "FEATURE_UNSPECIFIED",
		1: "FEATURE_DAILY_SCRUM",
		2: "FEATURE_WEEKLY_REPORT",
	}
	Feature_value = map[string]int32{
		"FEATURE_UNSPECIFIED":   0,
		"FEATURE_DAILY_SCRUM":   1,
		"FEATURE_WEEKLY_REPORT": 2,
	}
)

func (x Feature) Enum() *Feature {
	p := new(Feature)
	*p = x
	return p
}

func (x Feature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Feature) Descriptor() protoreflect.EnumDescriptor {
	return file_channelconfig_v1_service_proto_enumTypes[0].Descriptor()
}

func (Feature) Type() protoreflect.EnumType {
	return &file_channelconfig_v1_service_proto_enumTypes[0]
}

func (x Feature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Feature.Descriptor instead.
func (Feature) EnumDescriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{0}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Feature       Feature                `protobuf:"varint,2,opt,name=feature,proto3,enum=channelconfig.v1.Feature" json:"feature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SubscribeRequest) GetFeature() Feature {
	if x != nil {
		return x.Feature
	}
	return Feature_FEATURE_UNSPECIFIED
}

type SubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []Feature              `protobuf:"varint,1,rep,packed,name=features,proto3,enum=channelconfig.v1.Feature" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeResponse) GetFeatures() []Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Feature       Feature                `protobuf:"varint,2,opt,name=feature,proto3,enum=channelconfig.v1.Feature" json:"feature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *UnsubscribeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UnsubscribeRequest) GetFeature() Feature {
	if x != nil {
		return x.Feature
	}
	return Feature_FEATURE_UNSPECIFIED
}

type UnsubscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []Feature              `protobuf:"varint,1,rep,packed,name=features,proto3,enum=channelconfig.v1.Feature" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *UnsubscribeResponse) GetFeatures() []Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type UnsubscribeAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeAllRequest) Reset() {
	*x = UnsubscribeAllRequest{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeAllRequest) ProtoMessage() {}

func (x *UnsubscribeAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeAllRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeAllRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *UnsubscribeAllRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type UnsubscribeAllResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeAllResponse) Reset() {
	*x = UnsubscribeAllResponse{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeAllResponse) ProtoMessage() {}

func (x *UnsubscribeAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeAllResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeAllResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{5}
}

type ListSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsRequest) Reset() {
	*x = ListSubscriptionsRequest{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsRequest) ProtoMessage() {}

func (x *ListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListSubscriptionsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ListSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []Feature              `protobuf:"varint,1,rep,packed,name=features,proto3,enum=channelconfig.v1.Feature" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsResponse) Reset() {
	*x = ListSubscriptionsResponse{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsResponse) ProtoMessage() {}

func (x *ListSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListSubscriptionsResponse) GetFeatures() []Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type ListChannelsByFeatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Feature       Feature                `protobuf:"varint,1,opt,name=feature,proto3,enum=channelconfig.v1.Feature" json:"feature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelsByFeatureRequest) Reset() {
	*x = ListChannelsByFeatureRequest{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelsByFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelsByFeatureRequest) ProtoMessage() {}

func (x *ListChannelsByFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelsByFeatureRequest.ProtoReflect.Descriptor instead.
func (*ListChannelsByFeatureRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListChannelsByFeatureRequest) GetFeature() Feature {
	if x != nil {
		return x.Feature
	}
	return Feature_FEATURE_UNSPECIFIED
}

type ListChannelsByFeatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelIds    []string               `protobuf:"bytes,1,rep,name=channel_ids,json=channelIds,proto3" json:"channel_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelsByFeatureResponse) Reset() {
	*x = ListChannelsByFeatureResponse{}
	mi := &file_channelconfig_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelsByFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelsByFeatureResponse) ProtoMessage() {}

func (x *ListChannelsByFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelsByFeatureResponse.ProtoReflect.Descriptor instead.
func (*ListChannelsByFeatureResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListChannelsByFeatureResponse) GetChannelIds() []string {
	if x != nil {
		return x.ChannelIds
	}
	return nil
}

var File_channelconfig_v1_service_proto protoreflect.FileDescriptor

const file_channelconfig_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x1echannelconfig/v1/service.proto\x12\x10channelconfig.v1\"f\n" +
	"\x10SubscribeRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x123\n" +
	"\afeature\x18\x02 \x01(\x0e2\x19.channelconfig.v1.FeatureR\afeature\"J\n" +
	"\x11SubscribeResponse\x125\n" +
	"\bfeatures\x18\x01 \x03(\x0e2\x19.channelconfig.v1.FeatureR\bfeatures\"h\n" +
	"\x12UnsubscribeRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x123\n" +
	"\afeature\x18\x02 \x01(\x0e2\x19.channelconfig.v1.FeatureR\afeature\"L\n" +
	"\x13UnsubscribeResponse\x125\n" +
	"\bfeatures\x18\x01 \x03(\x0e2\x19.channelconfig.v1.FeatureR\bfeatures\"6\n" +
	"\x15UnsubscribeAllRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"\x18\n" +
	"\x16UnsubscribeAllResponse\"9\n" +
	"\x18ListSubscriptionsRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"R\n" +
	"\x19ListSubscriptionsResponse\x125\n" +
	"\bfeatures\x18\x01 \x03(\x0e2\x19.channelconfig.v1.FeatureR\bfeatures\"S\n" +
	"\x1cListChannelsByFeatureRequest\x123\n" +
	"\afeature\x18\x01 \x01(\x0e2\x19.channelconfig.v1.FeatureR\afeature\"@\n" +
	"\x1dListChannelsByFeatureResponse\x12\x1f\n" +
	"\vchannel_ids\x18\x01 \x03(\tR\n" +
	"channelIds*V\n" +
	"\aFeature\x12\x17\n" +
	"\x13FEATURE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FEATURE_DAILY_SCRUM\x10\x01\x12\x19\n" +
	"\x15FEATURE_WEEKLY_REPORT\x10\x022\x9f\x04\n" +
	"\x14ChannelConfigService\x12V\n" +
	"\tSubscribe\x12\".channelconfig.v1.SubscribeRequest\x1a#.channelconfig.v1.SubscribeResponse\"\x00\x12\\\n" +
	"\vUnsubscribe\x12$.channelconfig.v1.UnsubscribeRequest\x1a%.channelconfig.v1.UnsubscribeResponse\"\x00\x12e\n" +
	"\x0eUnsubscribeAll\x12'.channelconfig.v1.UnsubscribeAllRequest\x1a(.channelconfig.v1.UnsubscribeAllResponse\"\x00\x12n\n" +
	"\x11ListSubscriptions\x12*.channelconfig.v1.ListSubscriptionsRequest\x1a+.channelconfig.v1.ListSubscriptionsResponse\"\x00\x12z\n" +
	"\x15ListChannelsByFeature\x12..channelconfig.v1.ListChannelsByFeatureRequest\x1a/.channelconfig.v1.ListChannelsByFeatureResponse\"\x00B:Z8github.com/joyfuldevs/project-jarvis/proto/channelconfigb\x06proto3"

var (
	file_channelconfig_v1_service_proto_rawDescOnce sync.Once
	file_channelconfig_v1_service_proto_rawDescData []byte
)

func file_channelconfig_v1_service_proto_rawDescGZIP() []byte {
	file_channelconfig_v1_service_proto_rawDescOnce.Do(func() {
		file_channelconfig_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channelconfig_v1_service_proto_rawDesc), len(file_channelconfig_v1_service_proto_rawDesc)))
	})
	return file_channelconfig_v1_service_proto_rawDescData
}

var file_channelconfig_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_channelconfig_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_channelconfig_v1_service_proto_goTypes = []any{
	(Feature)(0),                          // 0: channelconfig.v1.Feature
	(*SubscribeRequest)(nil),              // 1: channelconfig.v1.SubscribeRequest
	(*SubscribeResponse)(nil),             // 2: channelconfig.v1.SubscribeResponse
	(*UnsubscribeRequest)(nil),            // 3: channelconfig.v1.UnsubscribeRequest
	(*UnsubscribeResponse)(nil),           // 4: channelconfig.v1.UnsubscribeResponse
	(*UnsubscribeAllRequest)(nil),         // 5: channelconfig.v1.UnsubscribeAllRequest
	(*UnsubscribeAllResponse)(nil),        // 6: channelconfig.v1.UnsubscribeAllResponse
	(*ListSubscriptionsRequest)(nil),      // 7: channelconfig.v1.ListSubscriptionsRequest
	(*ListSubscriptionsResponse)(nil),     // 8: channelconfig.v1.ListSubscriptionsResponse
	(*ListChannelsByFeatureRequest)(nil),  // 9: channelconfig.v1.ListChannelsByFeatureRequest
	(*ListChannelsByFeatureResponse)(nil), // 10: channelconfig.v1.ListChannelsByFeatureResponse
}
var file_channelconfig_v1_service_proto_depIdxs = []int32{
	0,  // 0: channelconfig.v1.SubscribeRequest.feature:type_name -> channelconfig.v1.Feature
	0,  // 1: channelconfig.v1.SubscribeResponse.features:type_name -> channelconfig.v1.Feature
	0,  // 2: channelconfig.v1.UnsubscribeRequest.feature:type_name -> channelconfig.v1.Feature
	0,  // 3: channelconfig.v1.UnsubscribeResponse.features:type_name -> channelconfig.v1.Feature
	0,  // 4: channelconfig.v1.ListSubscriptionsResponse.features:type_name -> channelconfig.v1.Feature
	0,  // 5: channelconfig.v1.ListChannelsByFeatureRequest.feature:type_name -> channelconfig.v1.Feature
	1,  // 6: channelconfig.v1.ChannelConfigService.Subscribe:input_type -> channelconfig.v1.SubscribeRequest
	3,  // 7: channelconfig.v1.ChannelConfigService.Unsubscribe:input_type -> channelconfig.v1.UnsubscribeRequest
	5,  // 8: channelconfig.v1.ChannelConfigService.UnsubscribeAll:input_type -> channelconfig.v1.UnsubscribeAllRequest
	7,  // 9: channelconfig.v1.ChannelConfigService.ListSubscriptions:input_type -> channelconfig.v1.ListSubscriptionsRequest
	9,  // 10: channelconfig.v1.ChannelConfigService.ListChannelsByFeature:input_type -> channelconfig.v1.ListChannelsByFeatureRequest
	2,  // 11: channelconfig.v1.ChannelConfigService.Subscribe:output_type -> channelconfig.v1.SubscribeResponse
	4,  // 12: channelconfig.v1.ChannelConfigService.Unsubscribe:output_type -> channelconfig.v1.UnsubscribeResponse
	6,  // 13: channelconfig.v1.ChannelConfigService.UnsubscribeAll:output_type -> channelconfig.v1.UnsubscribeAllResponse
	8,  // 14: channelconfig.v1.ChannelConfigService.ListSubscriptions:output_type -> channelconfig.v1.ListSubscriptionsResponse
	10, // 15: channelconfig.v1.ChannelConfigService.ListChannelsByFeature:output_type -> channelconfig.v1.ListChannelsByFeatureResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_channelconfig_v1_service_proto_init() }
func file_channelconfig_v1_service_proto_init() {
	if File_channelconfig_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channelconfig_v1_service_proto_rawDesc), len(file_channelconfig_v1_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channelconfig_v1_service_proto_goTypes,
		DependencyIndexes: file_channelconfig_v1_service_proto_depIdxs,
		EnumInfos:         file_channelconfig_v1_service_proto_enumTypes,
		MessageInfos:      file_channelconfig_v1_service_proto_msgTypes,
	}.Build()
	File_channelconfig_v1_service_proto = out.File
	file_channelconfig_v1_service_proto_goTypes = nil
	file_channelconfig_v1_service_proto_depIdxs = nil
}
