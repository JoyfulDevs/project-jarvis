// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: channelconfig/v2/service.proto

package channelconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChannelConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelConfigRequest) Reset() {
	*x = GetChannelConfigRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelConfigRequest) ProtoMessage() {}

func (x *GetChannelConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelConfigRequest.ProtoReflect.Descriptor instead.
func (*GetChannelConfigRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetChannelConfigRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetChannelConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *ChannelConfig         `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelConfigResponse) Reset() {
	*x = GetChannelConfigResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelConfigResponse) ProtoMessage() {}

func (x *GetChannelConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelConfigResponse.ProtoReflect.Descriptor instead.
func (*GetChannelConfigResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetChannelConfigResponse) GetConfig() *ChannelConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDailyScrumConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Config        *DailyScrumConfig      `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDailyScrumConfigRequest) Reset() {
	*x = SetDailyScrumConfigRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDailyScrumConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDailyScrumConfigRequest) ProtoMessage() {}

func (x *SetDailyScrumConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDailyScrumConfigRequest.ProtoReflect.Descriptor instead.
func (*SetDailyScrumConfigRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{2}
}

func (x *SetDailyScrumConfigRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SetDailyScrumConfigRequest) GetConfig() *DailyScrumConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetDailyScrumConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *DailyScrumConfig      `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDailyScrumConfigResponse) Reset() {
	*x = SetDailyScrumConfigResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDailyScrumConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDailyScrumConfigResponse) ProtoMessage() {}

func (x *SetDailyScrumConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDailyScrumConfigResponse.ProtoReflect.Descriptor instead.
func (*SetDailyScrumConfigResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{3}
}

func (x *SetDailyScrumConfigResponse) GetConfig() *DailyScrumConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetDailyScrumConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailyScrumConfigRequest) Reset() {
	*x = GetDailyScrumConfigRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailyScrumConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyScrumConfigRequest) ProtoMessage() {}

func (x *GetDailyScrumConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyScrumConfigRequest.ProtoReflect.Descriptor instead.
func (*GetDailyScrumConfigRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetDailyScrumConfigRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetDailyScrumConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *DailyScrumConfig      `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailyScrumConfigResponse) Reset() {
	*x = GetDailyScrumConfigResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailyScrumConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyScrumConfigResponse) ProtoMessage() {}

func (x *GetDailyScrumConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyScrumConfigResponse.ProtoReflect.Descriptor instead.
func (*GetDailyScrumConfigResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetDailyScrumConfigResponse) GetConfig() *DailyScrumConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetWeeklyReportConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Config        *WeeklyReportConfig    `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWeeklyReportConfigRequest) Reset() {
	*x = SetWeeklyReportConfigRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWeeklyReportConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWeeklyReportConfigRequest) ProtoMessage() {}

func (x *SetWeeklyReportConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWeeklyReportConfigRequest.ProtoReflect.Descriptor instead.
func (*SetWeeklyReportConfigRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{6}
}

func (x *SetWeeklyReportConfigRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SetWeeklyReportConfigRequest) GetConfig() *WeeklyReportConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetWeeklyReportConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *WeeklyReportConfig    `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWeeklyReportConfigResponse) Reset() {
	*x = SetWeeklyReportConfigResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWeeklyReportConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWeeklyReportConfigResponse) ProtoMessage() {}

func (x *SetWeeklyReportConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWeeklyReportConfigResponse.ProtoReflect.Descriptor instead.
func (*SetWeeklyReportConfigResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{7}
}

func (x *SetWeeklyReportConfigResponse) GetConfig() *WeeklyReportConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetWeeklyReportConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeeklyReportConfigRequest) Reset() {
	*x = GetWeeklyReportConfigRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeeklyReportConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeeklyReportConfigRequest) ProtoMessage() {}

func (x *GetWeeklyReportConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeeklyReportConfigRequest.ProtoReflect.Descriptor instead.
func (*GetWeeklyReportConfigRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetWeeklyReportConfigRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetWeeklyReportConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *WeeklyReportConfig    `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeeklyReportConfigResponse) Reset() {
	*x = GetWeeklyReportConfigResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeeklyReportConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeeklyReportConfigResponse) ProtoMessage() {}

func (x *GetWeeklyReportConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeeklyReportConfigResponse.ProtoReflect.Descriptor instead.
func (*GetWeeklyReportConfigResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetWeeklyReportConfigResponse) GetConfig() *WeeklyReportConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddScrumMessageHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     float64                `protobuf:"fixed64,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddScrumMessageHistoryRequest) Reset() {
	*x = AddScrumMessageHistoryRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddScrumMessageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScrumMessageHistoryRequest) ProtoMessage() {}

func (x *AddScrumMessageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScrumMessageHistoryRequest.ProtoReflect.Descriptor instead.
func (*AddScrumMessageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{10}
}

func (x *AddScrumMessageHistoryRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AddScrumMessageHistoryRequest) GetMessageId() float64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type AddScrumMessageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddScrumMessageHistoryResponse) Reset() {
	*x = AddScrumMessageHistoryResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddScrumMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScrumMessageHistoryResponse) ProtoMessage() {}

func (x *AddScrumMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScrumMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*AddScrumMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{11}
}

type GetScrumMessageHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScrumMessageHistoryRequest) Reset() {
	*x = GetScrumMessageHistoryRequest{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScrumMessageHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScrumMessageHistoryRequest) ProtoMessage() {}

func (x *GetScrumMessageHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScrumMessageHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetScrumMessageHistoryRequest) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetScrumMessageHistoryRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetScrumMessageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageIds    []float64              `protobuf:"fixed64,1,rep,packed,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScrumMessageHistoryResponse) Reset() {
	*x = GetScrumMessageHistoryResponse{}
	mi := &file_channelconfig_v2_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScrumMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScrumMessageHistoryResponse) ProtoMessage() {}

func (x *GetScrumMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScrumMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetScrumMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetScrumMessageHistoryResponse) GetMessageIds() []float64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

var File_channelconfig_v2_service_proto protoreflect.FileDescriptor

const file_channelconfig_v2_service_proto_rawDesc = "" +
	"\n" +
	"\x1echannelconfig/v2/service.proto\x12\x10channelconfig.v2\x1a\x1cchannelconfig/v2/types.proto\"8\n" +
	"\x17GetChannelConfigRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"S\n" +
	"\x18GetChannelConfigResponse\x127\n" +
	"\x06config\x18\x01 \x01(\v2\x1f.channelconfig.v2.ChannelConfigR\x06config\"w\n" +
	"\x1aSetDailyScrumConfigRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12:\n" +
	"\x06config\x18\x02 \x01(\v2\".channelconfig.v2.DailyScrumConfigR\x06config\"Y\n" +
	"\x1bSetDailyScrumConfigResponse\x12:\n" +
	"\x06config\x18\x01 \x01(\v2\".channelconfig.v2.DailyScrumConfigR\x06config\";\n" +
	"\x1aGetDailyScrumConfigRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"Y\n" +
	"\x1bGetDailyScrumConfigResponse\x12:\n" +
	"\x06config\x18\x01 \x01(\v2\".channelconfig.v2.DailyScrumConfigR\x06config\"{\n" +
	"\x1cSetWeeklyReportConfigRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12<\n" +
	"\x06config\x18\x02 \x01(\v2$.channelconfig.v2.WeeklyReportConfigR\x06config\"]\n" +
	"\x1dSetWeeklyReportConfigResponse\x12<\n" +
	"\x06config\x18\x01 \x01(\v2$.channelconfig.v2.WeeklyReportConfigR\x06config\"=\n" +
	"\x1cGetWeeklyReportConfigRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"]\n" +
	"\x1dGetWeeklyReportConfigResponse\x12<\n" +
	"\x06config\x18\x01 \x01(\v2$.channelconfig.v2.WeeklyReportConfigR\x06config\"]\n" +
	"\x1dAddScrumMessageHistoryRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\x01R\tmessageId\" \n" +
	"\x1eAddScrumMessageHistoryResponse\">\n" +
	"\x1dGetScrumMessageHistoryRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"A\n" +
	"\x1eGetScrumMessageHistoryResponse\x12\x1f\n" +
	"\vmessage_ids\x18\x01 \x03(\x01R\n" +
	"messageIds2\xe5\x06\n" +
	"\x14ChannelConfigService\x12k\n" +
	"\x10GetChannelConfig\x12).channelconfig.v2.GetChannelConfigRequest\x1a*.channelconfig.v2.GetChannelConfigResponse\"\x00\x12t\n" +
	"\x13SetDailyScrumConfig\x12,.channelconfig.v2.SetDailyScrumConfigRequest\x1a-.channelconfig.v2.SetDailyScrumConfigResponse\"\x00\x12t\n" +
	"\x13GetDailyScrumConfig\x12,.channelconfig.v2.GetDailyScrumConfigRequest\x1a-.channelconfig.v2.GetDailyScrumConfigResponse\"\x00\x12z\n" +
	"\x15SetWeeklyReportConfig\x12..channelconfig.v2.SetWeeklyReportConfigRequest\x1a/.channelconfig.v2.SetWeeklyReportConfigResponse\"\x00\x12z\n" +
	"\x15GetWeeklyReportConfig\x12..channelconfig.v2.GetWeeklyReportConfigRequest\x1a/.channelconfig.v2.GetWeeklyReportConfigResponse\"\x00\x12}\n" +
	"\x16AddScrumMessageHistory\x12/.channelconfig.v2.AddScrumMessageHistoryRequest\x1a0.channelconfig.v2.AddScrumMessageHistoryResponse\"\x00\x12}\n" +
	"\x16GetScrumMessageHistory\x12/.channelconfig.v2.GetScrumMessageHistoryRequest\x1a0.channelconfig.v2.GetScrumMessageHistoryResponse\"\x00B<Z:github.com/devafterdark/project-jarvis/proto/channelconfigb\x06proto3"

var (
	file_channelconfig_v2_service_proto_rawDescOnce sync.Once
	file_channelconfig_v2_service_proto_rawDescData []byte
)

func file_channelconfig_v2_service_proto_rawDescGZIP() []byte {
	file_channelconfig_v2_service_proto_rawDescOnce.Do(func() {
		file_channelconfig_v2_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channelconfig_v2_service_proto_rawDesc), len(file_channelconfig_v2_service_proto_rawDesc)))
	})
	return file_channelconfig_v2_service_proto_rawDescData
}

var file_channelconfig_v2_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_channelconfig_v2_service_proto_goTypes = []any{
	(*GetChannelConfigRequest)(nil),        // 0: channelconfig.v2.GetChannelConfigRequest
	(*GetChannelConfigResponse)(nil),       // 1: channelconfig.v2.GetChannelConfigResponse
	(*SetDailyScrumConfigRequest)(nil),     // 2: channelconfig.v2.SetDailyScrumConfigRequest
	(*SetDailyScrumConfigResponse)(nil),    // 3: channelconfig.v2.SetDailyScrumConfigResponse
	(*GetDailyScrumConfigRequest)(nil),     // 4: channelconfig.v2.GetDailyScrumConfigRequest
	(*GetDailyScrumConfigResponse)(nil),    // 5: channelconfig.v2.GetDailyScrumConfigResponse
	(*SetWeeklyReportConfigRequest)(nil),   // 6: channelconfig.v2.SetWeeklyReportConfigRequest
	(*SetWeeklyReportConfigResponse)(nil),  // 7: channelconfig.v2.SetWeeklyReportConfigResponse
	(*GetWeeklyReportConfigRequest)(nil),   // 8: channelconfig.v2.GetWeeklyReportConfigRequest
	(*GetWeeklyReportConfigResponse)(nil),  // 9: channelconfig.v2.GetWeeklyReportConfigResponse
	(*AddScrumMessageHistoryRequest)(nil),  // 10: channelconfig.v2.AddScrumMessageHistoryRequest
	(*AddScrumMessageHistoryResponse)(nil), // 11: channelconfig.v2.AddScrumMessageHistoryResponse
	(*GetScrumMessageHistoryRequest)(nil),  // 12: channelconfig.v2.GetScrumMessageHistoryRequest
	(*GetScrumMessageHistoryResponse)(nil), // 13: channelconfig.v2.GetScrumMessageHistoryResponse
	(*ChannelConfig)(nil),                  // 14: channelconfig.v2.ChannelConfig
	(*DailyScrumConfig)(nil),               // 15: channelconfig.v2.DailyScrumConfig
	(*WeeklyReportConfig)(nil),             // 16: channelconfig.v2.WeeklyReportConfig
}
var file_channelconfig_v2_service_proto_depIdxs = []int32{
	14, // 0: channelconfig.v2.GetChannelConfigResponse.config:type_name -> channelconfig.v2.ChannelConfig
	15, // 1: channelconfig.v2.SetDailyScrumConfigRequest.config:type_name -> channelconfig.v2.DailyScrumConfig
	15, // 2: channelconfig.v2.SetDailyScrumConfigResponse.config:type_name -> channelconfig.v2.DailyScrumConfig
	15, // 3: channelconfig.v2.GetDailyScrumConfigResponse.config:type_name -> channelconfig.v2.DailyScrumConfig
	16, // 4: channelconfig.v2.SetWeeklyReportConfigRequest.config:type_name -> channelconfig.v2.WeeklyReportConfig
	16, // 5: channelconfig.v2.SetWeeklyReportConfigResponse.config:type_name -> channelconfig.v2.WeeklyReportConfig
	16, // 6: channelconfig.v2.GetWeeklyReportConfigResponse.config:type_name -> channelconfig.v2.WeeklyReportConfig
	0,  // 7: channelconfig.v2.ChannelConfigService.GetChannelConfig:input_type -> channelconfig.v2.GetChannelConfigRequest
	2,  // 8: channelconfig.v2.ChannelConfigService.SetDailyScrumConfig:input_type -> channelconfig.v2.SetDailyScrumConfigRequest
	4,  // 9: channelconfig.v2.ChannelConfigService.GetDailyScrumConfig:input_type -> channelconfig.v2.GetDailyScrumConfigRequest
	6,  // 10: channelconfig.v2.ChannelConfigService.SetWeeklyReportConfig:input_type -> channelconfig.v2.SetWeeklyReportConfigRequest
	8,  // 11: channelconfig.v2.ChannelConfigService.GetWeeklyReportConfig:input_type -> channelconfig.v2.GetWeeklyReportConfigRequest
	10, // 12: channelconfig.v2.ChannelConfigService.AddScrumMessageHistory:input_type -> channelconfig.v2.AddScrumMessageHistoryRequest
	12, // 13: channelconfig.v2.ChannelConfigService.GetScrumMessageHistory:input_type -> channelconfig.v2.GetScrumMessageHistoryRequest
	1,  // 14: channelconfig.v2.ChannelConfigService.GetChannelConfig:output_type -> channelconfig.v2.GetChannelConfigResponse
	3,  // 15: channelconfig.v2.ChannelConfigService.SetDailyScrumConfig:output_type -> channelconfig.v2.SetDailyScrumConfigResponse
	5,  // 16: channelconfig.v2.ChannelConfigService.GetDailyScrumConfig:output_type -> channelconfig.v2.GetDailyScrumConfigResponse
	7,  // 17: channelconfig.v2.ChannelConfigService.SetWeeklyReportConfig:output_type -> channelconfig.v2.SetWeeklyReportConfigResponse
	9,  // 18: channelconfig.v2.ChannelConfigService.GetWeeklyReportConfig:output_type -> channelconfig.v2.GetWeeklyReportConfigResponse
	11, // 19: channelconfig.v2.ChannelConfigService.AddScrumMessageHistory:output_type -> channelconfig.v2.AddScrumMessageHistoryResponse
	13, // 20: channelconfig.v2.ChannelConfigService.GetScrumMessageHistory:output_type -> channelconfig.v2.GetScrumMessageHistoryResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_channelconfig_v2_service_proto_init() }
func file_channelconfig_v2_service_proto_init() {
	if File_channelconfig_v2_service_proto != nil {
		return
	}
	file_channelconfig_v2_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channelconfig_v2_service_proto_rawDesc), len(file_channelconfig_v2_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channelconfig_v2_service_proto_goTypes,
		DependencyIndexes: file_channelconfig_v2_service_proto_depIdxs,
		MessageInfos:      file_channelconfig_v2_service_proto_msgTypes,
	}.Build()
	File_channelconfig_v2_service_proto = out.File
	file_channelconfig_v2_service_proto_goTypes = nil
	file_channelconfig_v2_service_proto_depIdxs = nil
}
