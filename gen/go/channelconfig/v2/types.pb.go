// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: channelconfig/v2/types.proto

package channelconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DailyScrum    *DailyScrumConfig      `protobuf:"bytes,1,opt,name=daily_scrum,json=dailyScrum,proto3" json:"daily_scrum,omitempty"`
	WeeklyReport  *WeeklyReportConfig    `protobuf:"bytes,2,opt,name=weekly_report,json=weeklyReport,proto3" json:"weekly_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	mi := &file_channelconfig_v2_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_types_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelConfig) GetDailyScrum() *DailyScrumConfig {
	if x != nil {
		return x.DailyScrum
	}
	return nil
}

func (x *ChannelConfig) GetWeeklyReport() *WeeklyReportConfig {
	if x != nil {
		return x.WeeklyReport
	}
	return nil
}

type DailyScrumConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailyScrumConfig) Reset() {
	*x = DailyScrumConfig{}
	mi := &file_channelconfig_v2_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyScrumConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyScrumConfig) ProtoMessage() {}

func (x *DailyScrumConfig) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyScrumConfig.ProtoReflect.Descriptor instead.
func (*DailyScrumConfig) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_types_proto_rawDescGZIP(), []int{1}
}

func (x *DailyScrumConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type WeeklyReportConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeeklyReportConfig) Reset() {
	*x = WeeklyReportConfig{}
	mi := &file_channelconfig_v2_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklyReportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyReportConfig) ProtoMessage() {}

func (x *WeeklyReportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_channelconfig_v2_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyReportConfig.ProtoReflect.Descriptor instead.
func (*WeeklyReportConfig) Descriptor() ([]byte, []int) {
	return file_channelconfig_v2_types_proto_rawDescGZIP(), []int{2}
}

func (x *WeeklyReportConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_channelconfig_v2_types_proto protoreflect.FileDescriptor

const file_channelconfig_v2_types_proto_rawDesc = "" +
	"\n" +
	"\x1cchannelconfig/v2/types.proto\x12\x10channelconfig.v2\"\x9f\x01\n" +
	"\rChannelConfig\x12C\n" +
	"\vdaily_scrum\x18\x01 \x01(\v2\".channelconfig.v2.DailyScrumConfigR\n" +
	"dailyScrum\x12I\n" +
	"\rweekly_report\x18\x02 \x01(\v2$.channelconfig.v2.WeeklyReportConfigR\fweeklyReport\",\n" +
	"\x10DailyScrumConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\".\n" +
	"\x12WeeklyReportConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabledB:Z8github.com/joyfuldevs/project-jarvis/proto/channelconfigb\x06proto3"

var (
	file_channelconfig_v2_types_proto_rawDescOnce sync.Once
	file_channelconfig_v2_types_proto_rawDescData []byte
)

func file_channelconfig_v2_types_proto_rawDescGZIP() []byte {
	file_channelconfig_v2_types_proto_rawDescOnce.Do(func() {
		file_channelconfig_v2_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channelconfig_v2_types_proto_rawDesc), len(file_channelconfig_v2_types_proto_rawDesc)))
	})
	return file_channelconfig_v2_types_proto_rawDescData
}

var file_channelconfig_v2_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_channelconfig_v2_types_proto_goTypes = []any{
	(*ChannelConfig)(nil),      // 0: channelconfig.v2.ChannelConfig
	(*DailyScrumConfig)(nil),   // 1: channelconfig.v2.DailyScrumConfig
	(*WeeklyReportConfig)(nil), // 2: channelconfig.v2.WeeklyReportConfig
}
var file_channelconfig_v2_types_proto_depIdxs = []int32{
	1, // 0: channelconfig.v2.ChannelConfig.daily_scrum:type_name -> channelconfig.v2.DailyScrumConfig
	2, // 1: channelconfig.v2.ChannelConfig.weekly_report:type_name -> channelconfig.v2.WeeklyReportConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_channelconfig_v2_types_proto_init() }
func file_channelconfig_v2_types_proto_init() {
	if File_channelconfig_v2_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channelconfig_v2_types_proto_rawDesc), len(file_channelconfig_v2_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_channelconfig_v2_types_proto_goTypes,
		DependencyIndexes: file_channelconfig_v2_types_proto_depIdxs,
		MessageInfos:      file_channelconfig_v2_types_proto_msgTypes,
	}.Build()
	File_channelconfig_v2_types_proto = out.File
	file_channelconfig_v2_types_proto_goTypes = nil
	file_channelconfig_v2_types_proto_depIdxs = nil
}
